{
	"name": "dascript-plugin",
	"displayName": "daScript language support",
	"description": "daScript language support",
	"author": "Dmitri Granetchi",
	"license": "MIT",
	"version": "0.14.10",
	"repository": {
		"type": "git",
		"url": "https://github.com/profelis/daScript-plugin"
	},
	"publisher": "profelis",
	"categories": [
		"Programming Languages",
		"Linters",
		"Snippets",
		"Debuggers"
	],
	"keywords": [
		"dascript",
		"daScript"
	],
	"contributors": [
		"dima.granetchi@gmail.com"
	],
	"extensionDependencies": [
		"eguskov.dascript"
	],
	"engines": {
		"vscode": "^1.67.0"
	},
	"activationEvents": [
		"onLanguage:dascript"
	],
	"main": "./client/out/extension",
	"contributes": {
		"breakpoints": [
			{
				"language": "dascript"
			}
		],
		"debuggers": [
			{
				"type": "dascript",
				"languages": [
					"dascript"
				],
				"label": "daScript debugger",
				"configurationAttributes": {
					"launch": {
						"required": [
							"program"
						],
						"properties": {
							"program": {
								"type": "string",
								"description": "daScript compiler with arguments",
								"default": "${config:dascript.compiler} ${file}"
							},
							"console": {
								"type": "string",
								"description": "Where to launch the debug target. Defaults to 'internalOutput' if not defined",
								"default": "internalOutput",
								"enum": [
									"internalOutput",
									"externalTerminal",
									"internalTerminal"
								]
							},
							"cwd": {
								"type": "string",
								"description": "Working directory",
								"default": "${fileDirname}"
							},
							"host": {
								"type": "string",
								"description": "Host used to connect with debugger",
								"default": ""
							},
							"port": {
								"type": "number",
								"description": "Port used to connect with debugger (0 - random)",
								"default": 0
							},
							"connectTimeout": {
								"type": "number",
								"description": "Socket connection delay in seconds",
								"default": 2
							},
							"inlinePreviewLimit": {
								"type": "number",
								"description": "Max length of preview values",
								"default": 50
							},
							"maxChildrenCount": {
								"type": "number",
								"description": "Max number of children to show in variables view (-1 - unlimited)",
								"default": 500
							},
							"collectAllGlobals": {
								"type": "boolean",
								"description": "Collect all global variables",
								"default": false
							},
							"steppingDebugger": {
								"type": "boolean",
								"description": "Use stepping debugger",
								"default": false
							},
							"profiler": {
								"type": "boolean",
								"description": "Use internal profiler. Profile whole application",
								"default": false
							},
							"profilerManual": {
								"type": "boolean",
								"description": "Use internal profiler. Call profiler_boost::enable_profiler/disable_profiler to manage profiler",
								"default": false
							},
							"profilerFile": {
								"type": "string",
								"description": "Profiler output file. Requires 'profiler' attribute",
								"default": "",
								"required": [
									"profiler"
								]
							},
							"paths": {
								"type": "array",
								"default": [],
								"description": "Absolute folder paths to resolve relative file paths"
							},
							"pathAliases": {
								"type": "object",
								"default": {},
								"description": "Aliases for paths to resolve virtual file paths"
							}
						}
					},
					"attach": {
						"required": [],
						"properties": {
							"host": {
								"type": "string",
								"description": "Host used to connect with debugger",
								"default": ""
							},
							"port": {
								"type": "number",
								"description": "Debug port used to connect",
								"default": 10000
							},
							"inlinePreviewLimit": {
								"type": "number",
								"description": "Max length of preview values",
								"default": 50
							},
							"paths": {
								"type": "array",
								"default": [],
								"description": "Absolute folder paths to resolve relative file paths"
							},
							"pathAliases": {
								"type": "object",
								"default": {},
								"description": "Aliases for paths to resolve virtual file paths"
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"type": "dascript",
						"request": "launch",
						"name": "daScript: launch",
						"program": "${config:dascript.compiler} ${file}",
						"cwd": "${fileDirname}"
					},
					{
						"type": "dascript",
						"request": "attach",
						"name": "daScript: attach",
						"port": 10000
					}
				],
				"configurationSnippets": [
					{
						"label": "daScript: Launch",
						"description": "Debug daScript file",
						"body": {
							"type": "dascript",
							"request": "launch",
							"name": "daScript: Launch",
							"program": "^\"\\${config:dascript.compiler} \\${file}\"",
							"cwd": "^\"\\${fileDirname}\""
						}
					},
					{
						"label": "daScript: Attach",
						"description": "Attach to running application",
						"body": {
							"type": "dascript",
							"request": "attach",
							"name": "daScript: Attach",
							"port": 10000
						}
					},
					{
						"label": "daScript: Test file",
						"description": "Test current file using dastest framework",
						"body": {
							"type": "dascript",
							"request": "launch",
							"name": "daScript: Test file",
							"program": "^\"\\${config:dascript.compiler} _dasroot_/dastest/dastest.das -- --color --test \\${file}\"",
							"cwd": "^\"\\${fileDirname}\"",
							"console": "internalTerminal"
						}
					},
					{
						"label": "daScript: Test all",
						"description": "Test whole workspace using dastest framework",
						"body": {
							"type": "dascript",
							"request": "launch",
							"name": "daScript: Test all",
							"program": "^\"\\${config:dascript.compiler} _dasroot_/dastest/dastest.das -- --color --test \\${workspaceFolder}\"",
							"cwd": "^\"\\${workspaceFolder}\"",
							"console": "internalTerminal"
						}
					}
				]
			}
		],
		"configuration": {
			"type": "object",
			"title": "daScript",
			"properties": {
				"dascript.compiler": {
					"scope": "resource",
					"type": "string",
					"default": "daScript",
					"description": "Absolute path to the dascript compiler"
				},
				"dascript.server.args": {
					"scope": "resource",
					"type": "array",
					"default": [
						"${file}",
						"--",
						"--port",
						"${port}"
					],
					"description": "LSP server run arguments\n- ${file} - current file\n${port} - port"
				},
				"dascript.server.connectTimeout": {
					"type": "number",
					"description": "Socket connection delay in seconds",
					"default": 4
				},
				"dascript.server.unity": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "Use one language server for all workspaces"
				},
				"dascript.project.file": {
					"scope": "resource",
					"type": "string",
					"default": "",
					"description": "Dascript project file - *.das_project"
				},
				"dascript.project.scanWorkspace": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "Scan/compile all files in workspace"
				},
				"dascript.project.roots": {
					"scope": "resource",
					"type": "array",
					"default": [],
					"description": "Absolute folder paths to resolve relative file paths"
				},
				"dascript.project.fileAccessRoots": {
					"scope": "resource",
					"type": "object",
					"default": {},
					"description": "Additional roots passed to file access when compiling script file"
				},
				"dascript.hovers.verbose": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "More information in hover"
				},
				"dascript.debug.port": {
					"scope": "resource",
					"type": "integer",
					"default": 0,
					"description": "Server port (negative value - disable server spawn)"
				},
				"dascript.experimental": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "Experimental (beta) features"
				},
				"dascript.colorPreviewFormat": {
					"scope": "resource",
					"type": "string",
					"enum": [ "ARGB", "RGBA" ],
					"default": "ARGB",
					"description": "Color preview format"
				},
				"dascript.policies.ignore_shared_modules": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "ignore_shared_modules policy"
				},
				"dascript.policies.no_global_variables": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "no_global_variables policy"
				},
				"dascript.policies.no_unused_block_arguments": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "no_unused_block_arguments policy"
				},
				"dascript.policies.no_unused_function_arguments": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "no_unused_function_arguments policy"
				},
				"dascript.policies.fail_on_lack_of_aot_export": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "fail_on_lack_of_aot_export policy"
				}
			}
		},
		"snippets": [
			{
				"language": "dascript",
				"path": "./snippets/dascript.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -b",
		"watch": "tsc -b -w",
		"postinstall": "cd client && npm install && cd .."
	},
	"devDependencies": {
		"@types/mocha": "^5.2.7",
		"@types/node": "^12.12.53",
		"@typescript-eslint/eslint-plugin": "^3.7.1",
		"@typescript-eslint/parser": "^3.7.1",
		"eslint": "^7.32.0",
		"typescript": "^4.9.4",
		"@vscode/debugadapter": "^1.48.0"
	},
	"dependencies": {
		"minimatch": "^5.1.0",
		"run-in-terminal": "^0.0.3",
		"semver": "^7.5.2",
		"@vscode/debugadapter": "^1.48.0"
	}
}
